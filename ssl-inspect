#!/bin/bash
# based off of src: https://gist.github.com/gene1wood/6530100

if [ -n "$DEBUG" ]; then
    PS4=':${LINENO}+'
    set -x
fi

CRT="-----BEGIN CERTIFICATE-----"
CSR="-----BEGIN CERTIFICATE REQUEST-----"
KEY="-----BEGIN RSA PRIVATE KEY-----"

RC=0
TEXT=""
ACTION=

process() {
    while read line; do
        if [ -z "$TEXT" ]; then
            if [ "$line" == "$CRT" ]; then
                ACTION="x509"
            elif [ "$line" == "$CSR" ]; then
                ACTION="req"
            elif [ "$line" == "$KEY" ]; then
                ACTION="rsa"
            fi
            TEXT="$line\n"
        else
            TEXT="$TEXT$line\n"
        fi
    done < "$1"
}

host_cmd() {
    if [[ "$1" == *":"* ]]; then
        HOST="${1%%:*}"
        PORT="${1#*:}"
    else
        HOST="$1"
        PORT="443"
    fi
    if [[ $(host "$HOST") != *"not found"* ]]; then
        echo "echo -n | openssl s_client -connect $HOST:$PORT -servername $HOST 2> /dev/null | openssl x509 -text"
        return 0
    elif [ ! -f "$1" ]; then
        echo "echo invalid: $1"
        return 1
    fi
}

file_cmd() {
    if [ -n "$TEXT" ] && [ -n "$ACTION" ]; then
        echo "printf '%b' \"\$TEXT\" | openssl $ACTION -in /dev/stdin -noout -text"
        return 0
    else
        echo "echo ERROR"
        return 1
    fi
}

if [ -t 0 ]; then
    if [ -f "$1" ]; then
        process "$1"
        CMD="$(file_cmd)"
        RC=$?
    else
        CMD="$(host_cmd "$1")"
        RC=$?
    fi
else
    process /dev/stdin
    CMD="$(file_cmd)"
    RC=$?
fi

if [ -n "$VERBOSE" ]; then
    echo "$CMD"
fi


eval "$CMD"
exit "$RC"
